//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyTravel.Website.TravelService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TravelService.ITravelService")]
    public interface ITravelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetOptions", ReplyAction="http://tempuri.org/ITravelService/GetOptionsResponse")]
        int[][] GetOptions(int[] choose, int[] shown);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetOptions", ReplyAction="http://tempuri.org/ITravelService/GetOptionsResponse")]
        System.Threading.Tasks.Task<int[][]> GetOptionsAsync(int[] choose, int[] shown);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetResults", ReplyAction="http://tempuri.org/ITravelService/GetResultsResponse")]
        int[] GetResults(int[] choose, int[] shown);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetResults", ReplyAction="http://tempuri.org/ITravelService/GetResultsResponse")]
        System.Threading.Tasks.Task<int[]> GetResultsAsync(int[] choose, int[] shown);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetIntrest", ReplyAction="http://tempuri.org/ITravelService/GetIntrestResponse")]
        MyTravel.PlaceResult GetIntrest(int[] arr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetIntrest", ReplyAction="http://tempuri.org/ITravelService/GetIntrestResponse")]
        System.Threading.Tasks.Task<MyTravel.PlaceResult> GetIntrestAsync(int[] arr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetFlights", ReplyAction="http://tempuri.org/ITravelService/GetFlightsResponse")]
        MyTravel.FlightResult[] GetFlights(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetFlights", ReplyAction="http://tempuri.org/ITravelService/GetFlightsResponse")]
        System.Threading.Tasks.Task<MyTravel.FlightResult[]> GetFlightsAsync(string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITravelServiceChannel : MyTravel.Website.TravelService.ITravelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TravelServiceClient : System.ServiceModel.ClientBase<MyTravel.Website.TravelService.ITravelService>, MyTravel.Website.TravelService.ITravelService {
        
        public TravelServiceClient() {
        }
        
        public TravelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TravelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TravelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TravelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int[][] GetOptions(int[] choose, int[] shown) {
            return base.Channel.GetOptions(choose, shown);
        }
        
        public System.Threading.Tasks.Task<int[][]> GetOptionsAsync(int[] choose, int[] shown) {
            return base.Channel.GetOptionsAsync(choose, shown);
        }
        
        public int[] GetResults(int[] choose, int[] shown) {
            return base.Channel.GetResults(choose, shown);
        }
        
        public System.Threading.Tasks.Task<int[]> GetResultsAsync(int[] choose, int[] shown) {
            return base.Channel.GetResultsAsync(choose, shown);
        }
        
        public MyTravel.PlaceResult GetIntrest(int[] arr) {
            return base.Channel.GetIntrest(arr);
        }
        
        public System.Threading.Tasks.Task<MyTravel.PlaceResult> GetIntrestAsync(int[] arr) {
            return base.Channel.GetIntrestAsync(arr);
        }
        
        public MyTravel.FlightResult[] GetFlights(string text) {
            return base.Channel.GetFlights(text);
        }
        
        public System.Threading.Tasks.Task<MyTravel.FlightResult[]> GetFlightsAsync(string text) {
            return base.Channel.GetFlightsAsync(text);
        }
    }
}
