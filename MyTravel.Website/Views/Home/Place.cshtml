@model MyTravel.FlightResult[]
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div style="margin: 30px auto;" class="container animate-box fadeInUp animated" ng-controller="placeController">
    <h2>@ViewBag.Name</h2>
    <div class="row">
        <div class="col-sm-6">
            <div id="map"></div>
        </div>
        <div class="col-sm-6">
            <h3>Flights:</h3>
            <ul class="list-group">
                @foreach (var f in Model)
                {
                    <li class="list-group-item">
                        <strong> from @f.DepartureDate.ToString("dd/MM/yy") until @f.ReturnDate.ToString("dd/MM/yy")</strong>
                        <div>
                            Price: <strong>@f.Price$</strong>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQqOZW42AWexM3iFEubLITPLdTDj2XyCU&callback=initMap">
    </script>
    <script>
  var geocoder;
  var map;
  function initialize() {
    geocoder = new google.maps.Geocoder();
    var latlng = new google.maps.LatLng(-34.397, 150.644);
    var mapOptions = {
      zoom: 8,
      center: latlng
    }
    map = new google.maps.Map(document.getElementById('map'), mapOptions);
  }

  function codeAddress() {
    var address = '@ViewBag.Name';
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location
        });
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }

  initialize();
  codeAddress();
    </script>

    <!-- <script>
        var map;

        function initMap() {
            var uluru = { lat: -25.363, lng: 131.044 };
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 4,
                center: uluru
            });
            console.log(map);
            map.setPlace({
                placeId: place.place_id,
                location: place.geometry.location
            });
            var marker = new google.maps.Marker({
                position: uluru,
                map: map
            });
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQqOZW42AWexM3iFEubLITPLdTDj2XyCU&callback=initMap&search=@ViewBag.Name">
    </script>-->
</div>